// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PruebaWebApp.Datos;

#nullable disable

namespace PruebaWebApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240618002649_createOficina")]
    partial class createOficina
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PruebaWebApp.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("PruebaWebApp.Models.Oficina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Puesto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sueldo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId")
                        .IsUnique()
                        .HasFilter("[UsuarioId] IS NOT NULL");

                    b.ToTable("Oficinas");
                });

            modelBuilder.Entity("PruebaWebApp.Models.Proyecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Proyectos");
                });

            modelBuilder.Entity("PruebaWebApp.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PruebaWebApp.Models.UsuarioProyecto", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdProyecto")
                        .HasColumnType("int");

                    b.HasKey("IdUsuario", "IdProyecto");

                    b.HasIndex("IdProyecto");

                    b.ToTable("UsuarioProyectos");
                });

            modelBuilder.Entity("PruebaWebApp.Models.Oficina", b =>
                {
                    b.HasOne("PruebaWebApp.Models.Usuario", "Usuario")
                        .WithOne("Oficina")
                        .HasForeignKey("PruebaWebApp.Models.Oficina", "UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PruebaWebApp.Models.Usuario", b =>
                {
                    b.HasOne("PruebaWebApp.Models.Categoria", "Categoria")
                        .WithMany("Usuarios")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("PruebaWebApp.Models.UsuarioProyecto", b =>
                {
                    b.HasOne("PruebaWebApp.Models.Proyecto", "Proyecto")
                        .WithMany("UsuarioProyectos")
                        .HasForeignKey("IdProyecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PruebaWebApp.Models.Usuario", "Usuario")
                        .WithMany("UsuarioProyectos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PruebaWebApp.Models.Categoria", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("PruebaWebApp.Models.Proyecto", b =>
                {
                    b.Navigation("UsuarioProyectos");
                });

            modelBuilder.Entity("PruebaWebApp.Models.Usuario", b =>
                {
                    b.Navigation("Oficina");

                    b.Navigation("UsuarioProyectos");
                });
#pragma warning restore 612, 618
        }
    }
}
